apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.firebase.crashlytics'
apply from: '../code_quality_tools/jacoco.gradle'
//apply from: '../code_quality_tools/findbugs.gradle'
apply from: '../code_quality_tools/checkstyle.gradle'
apply from: '../code_quality_tools/pmd.gradle'
apply from: '../code_quality_tools/ktlint.gradle'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "org.stepic.droid"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.code
        versionName versions.name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true
    }

    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }

        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }

    signingConfigs {
        debug {
            storeFile file(debugKeystore)
            storePassword debugKeystorePass
            keyAlias debugAlias
            keyPassword debugAliasPass
        }

        release {
            storeFile file(keystore)
            storePassword keystorePass
            keyAlias alias
            keyPassword aliasPass
        }

        stage {
            storeFile file(keystore)
            storePassword keystorePass
            keyAlias oldAlias
            keyPassword oldAliasPass
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        warningsAsErrors false // after fixing existing errors set to true for fixing warnings
        abortOnError false // after fixing existing errors set to true for failing fast
        lintConfig rootProject.file('lint.xml')
        htmlOutput rootProject.file("reports/lint/lint.html")
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'

            firebaseCrashlytics {
                nativeSymbolUploadEnabled true
                strippedNativeLibsDir 'build/intermediates/stripped_native_libs/release/out/lib'
                unstrippedNativeLibsDir 'build/intermediates/merged_native_libs/release/out/lib'
            }
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro', 'proguard-rules-dev.pro'
            versionNameSuffix "-debug"

            testCoverageEnabled = false

            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }

        //the apk of this type is signed by old prod keys
        //it makes apk testable (sign in, smart lock, etc are worked).
        //now new sign configs are used for providing to Google Play
        //assemble with oldProd on release/* branches
        stage {
            initWith release
            signingConfig signingConfigs.stage
            matchingFallbacks = ['release']
        }

        stageDebuggable {
            initWith stage
            debuggable true
            signingConfig signingConfigs.stage
            matchingFallbacks = ['release']
            versionNameSuffix "-debuggable"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        viewBinding true
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation project(':androidsvg')
    implementation files('libs/flexbox-release.aar')
    implementation project(':billing')
    implementation project(':model')
    implementation libraries.kotlinStd

    //<DI>
    implementation libraries.dagger
    kapt libraries.daggerCompiler
    //</DI>

    implementation libraries.rxAndroid
    implementation libraries.rxJava2
    implementation libraries.rxKotlin
    implementation libraries.rxRelay
    implementation libraries.rxRoom

    implementation libraries.appCompat
    implementation libraries.ktx
    implementation libraries.recyclerview
    implementation libraries.swiperefreshlayout
    implementation libraries.viewPager
    implementation libraries.viewPager2
    implementation libraries.cardView
    implementation libraries.constraintLayout
    implementation libraries.material
    implementation libraries.fragment
    implementation libraries.fragmentKtx
    implementation libraries.room
    kapt libraries.roomCompiler
    implementation libraries.browser

    implementation libraries.archCompiler
    implementation libraries.archViewModel
    implementation libraries.media
    implementation libraries.multidex
    implementation libraries.androidKit.values()
    implementation libraries.domainRx
    implementation libraries.viewInjection
    implementation libraries.viewBindingDelegate

    implementation libraries.exoPlayerCore
    implementation libraries.exoPlayerUI
    implementation libraries.exoPlayerMediaSession

    implementation libraries.gson
    implementation libraries.retrofit
    implementation libraries.retrofitGsonConverter
    implementation libraries.retrofitRxJavaAdapter
    implementation (libraries.okhttp) {
        force = true
    }
    implementation libraries.jsoup

    implementation libraries.glide
    implementation libraries.glideTransformations
    kapt libraries.glideAnnotations

    implementation libraries.amplitude
    implementation libraries.appMetrica
    implementation libraries.branch
    implementation libraries.installreferrer

    implementation libraries.lottie

    implementation libraries.playCore
    implementation libraries.playCoreKtx
    implementation platform(libraries.firebaseBoM)
    implementation libraries.firebaseMessaging
    implementation libraries.firebaseAnalytics
    implementation libraries.firebaseAppindexing
    implementation libraries.googleauth
    implementation libraries.firebaseConfig
    implementation libraries.firebasePerf

//    implementation libraries.facebookSdk
    implementation libraries.vkSdk

    implementation libraries.timber

    implementation libraries.numberPicker
    implementation libraries.photoView
    implementation libraries.recyclerAnimators
    implementation libraries.materialProgress
    implementation libraries.circleImageView
    implementation libraries.circleIndicator
    implementation libraries.confetti
    implementation libraries.MPAndroidChart

    implementation libraries.shortcutBadger
    implementation libraries.StoriesKit

    debugImplementation libraries.leakCanary
    releaseImplementation libraries.leakCanaryNoOp
    stageImplementation libraries.leakCanaryNoOp
    stageDebuggableImplementation libraries.leakCanaryNoOp

    implementation(libraries.crashlytics) {
        transitive = true
    }
    implementation libraries.crashlyticsNdk

    testImplementation libraries.junit
    testImplementation libraries.robolectric
    testImplementation libraries.mockitoCore
    testImplementation libraries.mockitoKt
    testImplementation libraries.jodaTime
    testImplementation libraries.hamcrest

    androidTestImplementation libraries.testRunner
    androidTestImplementation libraries.testRules
    androidTestImplementation libraries.espressoCore
    androidTestImplementation libraries.espressoContrib
    androidTestImplementation libraries.espressoIntents

    debugImplementation libraries.soloader
    debugImplementation libraries.flipperCore
    debugImplementation libraries.flipperNetwork
    debugImplementation libraries.toolargetool
    stageDebuggableImplementation libraries.soloader
    stageDebuggableImplementation libraries.flipperCore
    stageDebuggableImplementation libraries.flipperNetwork
    stageDebuggableImplementation libraries.toolargetool

    stageImplementation libraries.flipperNoop
    releaseImplementation libraries.flipperNoop
}

afterEvaluate {
    bundleRelease { finalizedBy(":app:uploadCrashlyticsSymbolFileRelease")}
}

apply plugin: 'com.google.gms.google-services'
if (getGradle().getStartParameter().getTaskRequests().toString().contains("Release")) {
    apply plugin: 'com.getkeepsafe.dexcount'
}
apply plugin: 'com.google.firebase.firebase-perf'